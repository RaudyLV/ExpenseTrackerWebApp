@using ExpenseTrackerWebApp.ViewModels

@model List<ExpenseGroupVM>

<div class="container mt-4">
    <div class="card p-4 shadow">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h3>Expense List</h3>
            <a class="btn btn-primary px-sm-3" asp-action="Create">Create</a>
        </div>

        @* Formulario de filtros *@
        <form method="get" asp-action="IndexAsync">
            <div class="row mb-3">
                <div class="col-md-4">
                    <label for="groupBy">Agrupar por:</label>
                    <select class="form-control" id="groupBy" name="groupBy">
                        <option value="month">Mes</option>
                        <option value="year">Año</option>
                    </select>
                </div>
                <div class="col-md-4">
                    <label for="Month">Mes:</label>
                    <select class="form-control" id="Month" name="month">
                        <option value="">Todos</option>
                        @foreach (var month in ViewBag.Months)
                        {
                            <option value="@month.Month">@month.MonthName</option>
                        }
                    </select>
                </div>
                <div class="col-md-4">
                    <label for="Year">Año:</label>
                    <select class="form-control" id="Year" name="year">
                        <option value="">Todos</option>
                        @foreach (var year in ViewBag.Years)
                        {
                            <option value="@year">@year</option>
                        }
                    </select>
                </div>
            </div>
            <button type="submit" class="btn btn-primary">Buscar</button>
        </form>

        @* Mostrar gastos agrupados *@
        <div class="table-responsive mt-4">
            @foreach (var group in Model)
            {
                <h4>
                    @if (ViewContext.HttpContext.Request.Query["groupBy"].ToString().ToLower() == "year")
                    {
                        <text>Año: @group.GroupKey</text>
                    }
                    else
                    {
                        <text>Mes: @(new DateTime(2021, group.GroupKey, 1).ToString("MMMM"))</text>
                    }
                </h4>
                <table class="table table-striped table-bordered">
                    <thead class="table-light">
                        <tr>
                            <th class="w-50 px-4 py-3">Description</th>
                            <th class="w-25 px-3 py-2">Amount</th>
                            <th class="w-25 px-3 py-2">Date</th>
                            <th class="text-center px-3 py-2">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < group.ExpenseDescription.Count; i++)
                        {
                            <tr>
                                <td>@group.ExpenseDescription[i]</td>
                                <td>@group.ExpenseAmount[i]</td>
                                <td>@group.ExpenseDate[i].ToString("yyyy-MM-dd")</td>
                                <td class="text-center">
                                    <a class="btn btn-warning btn-sm" asp-action="Edit" asp-route-id="@group.ExpenseDate[i].ToString("yyyy-MM-dd")">Edit</a>
                                    <a class="btn btn-danger btn-sm" asp-action="Delete" asp-route-id="@group.ExpenseDate[i].ToString("yyyy-MM-dd")">Delete</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
